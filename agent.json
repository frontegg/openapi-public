{
  "openapi": "3.0.0",
  "paths": {
    "/v1/data/e10s/features/is_entitled_to_input_feature": {
      "post": {
        "operationId": "OpenApiPDPController_isEntitledToFeature",
        "summary": "Is entitled to feature",
        "description": "Check whether a specific account (tenant) or user is entitled to access a requested feature based on their permissions, attributes, and entitlement configuration.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "input": {
                    "properties": {
                      "subjectContext": {
                        "$ref": "#/components/schemas/SubjectContext"
                      },
                      "requestContext": {
                        "$ref": "#/components/schemas/IsEntitledToFeatureDto"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PDPResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Entitlements Check"
        ]
      }
    },
    "/v1/data/e10s/permissions/is_entitled_to_input_permission": {
      "post": {
        "operationId": "OpenApiPDPController_isEntitledToPermission",
        "summary": "Is entitled to permission",
        "description": "Check whether a specific user is entitled to access a requested permission based on their role assignments and account (tenant) configuration.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "input": {
                    "properties": {
                      "subjectContext": {
                        "$ref": "#/components/schemas/SubjectContext"
                      },
                      "requestContext": {
                        "$ref": "#/components/schemas/IsEntitledToPermissionDto"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PDPResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Entitlements Check"
        ]
      }
    },
    "/v1/data/e10s/routes/is_entitled_to_input_route": {
      "post": {
        "operationId": "OpenApiPDPController_isEntitledToRoute",
        "summary": "Is entitled to route",
        "description": "Check whether a specific account (tenant) or user is entitled to access a requested route based on the HTTP method, path, and their associated permissions or feature entitlements.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "input": {
                    "properties": {
                      "subjectContext": {
                        "$ref": "#/components/schemas/SubjectContext"
                      },
                      "requestContext": {
                        "$ref": "#/components/schemas/IsEntitledToRouteDto"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PDPResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Entitlements Check"
        ]
      }
    }
  },
  "info": {
    "title": "Entitlements Agent (PDP)",
    "description": "The endpoints in this section pertain to the usage of an Entitlements Agent. When your application or service needs to verify entitlements, it can query the Entitlements Agent directly via HTTP.\n\nThese endpoints can be integrated into any backend framework, enabling you to leverage entitlements for advanced authorization needs.",
    "version": ""
  },
  "servers": [
    {
      "url": "http://{host}:{port}",
      "variables": {
        "host": {
          "default": "localhost"
        },
        "port": {
          "default": "8181"
        }
      }
    }
  ],
  "components": {
    "schemas": {
      "IsEntitledToFeatureDto": {
        "type": "object",
        "properties": {
          "featureKey": {
            "type": "string",
            "example": "example-feature-key",
            "description": ""
          }
        },
        "required": [
          "featureKey"
        ]
      },
      "SubjectContext": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "6c2ce177-66cd-4163-a012-b7833255a490",
            "description": ""
          },
          "tenantId": {
            "type": "string",
            "example": "f21ca66c-d23b-496f-b805-121ed37eb46a",
            "description": ""
          },
          "permissions": {
            "example": [
              "example.permission.read",
              "example.permission.write"
            ],
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "attributes": {
            "type": "object",
            "example": {
              "exampleAttribute": "example-value"
            },
            "description": ""
          }
        },
        "required": [
          "tenantId"
        ]
      },
      "EntitlementsResult": {
        "type": "object",
        "properties": {
          "justification": {
            "type": "string",
            "enum": [
              "MISSING_FEATURE",
              "MISSING_PERMISSION",
              "PLAN_EXPIRED",
              "MISSING_ROUTE",
              "ROUTE_DENIED"
            ],
            "example": "MISSING_FEATURE",
            "description": ""
          },
          "monitoring": {
            "type": "boolean",
            "description": ""
          },
          "result": {
            "type": "boolean",
            "example": false,
            "description": ""
          }
        },
        "required": [
          "result"
        ]
      },
      "PDPResponse": {
        "type": "object",
        "properties": {
          "decision_id": {
            "type": "string",
            "example": "df5dae62-be02-4333-bbe1-f7220e13c6c3",
            "description": ""
          },
          "metrics": {
            "type": "object",
            "description": ""
          },
          "result": {
            "$ref": "#/components/schemas/EntitlementsResult",
            "description": ""
          }
        },
        "required": [
          "decision_id",
          "metrics",
          "result"
        ]
      },
      "IsEntitledToPermissionDto": {
        "type": "object",
        "properties": {
          "permissionKey": {
            "type": "string",
            "example": "example.permission.read",
            "description": ""
          }
        },
        "required": [
          "permissionKey"
        ]
      },
      "IsEntitledToRouteDto": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE",
              "*"
            ],
            "example": "GET",
            "description": ""
          },
          "path": {
            "type": "string",
            "example": "/example",
            "description": ""
          }
        },
        "required": [
          "method",
          "path"
        ]
      }
    }
  },
  "x-tagGroups": []
}
